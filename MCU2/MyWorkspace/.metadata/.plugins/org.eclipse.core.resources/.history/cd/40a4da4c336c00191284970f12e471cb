/*
 * main.c
 *
 *  Created on: 13-Apr-2019
 *      Author: Sreenath V
 */


#include "stm32f4xx_hal.h"
#include "string.h"

#define TRUE 1
#define FALSE 0



void UART2_Init(void);

void Error_Handler();

void SystemClockConfig(uint8_t);

UART_HandleTypeDef huart2;




int main(void)
{


	HAL_Init();
	UART2_Init();

	SystemClockConfig(84);

	while(1);
	return 0;
}




void SystemClockConfig(uint8_t clockFreq)
{
	RCC_OscInitTypeDef osc_init;
	RCC_ClkInitTypeDef clk_init;

	uint32_t FlashLatency = 0;

	osc_init.OscillatorType = RCC_OSCILLATORTYPE_HSI;
	osc_init.HSIState = RCC_HSI_ON;
	osc_init.HSICalibrationValue = 16;
	osc_init.PLL.PLLState = RCC_PLL_ON;
	osc_init.PLL.PLLSource = RCC_PLLSOURCE_HSI;


	switch(clockFreq)
	{
	case SYS_CLOCK_FREQ_50_MHz	:	osc_init.PLL.PLLM 		= 16;
									osc_init.PLL.PLLN 		= 100;
									osc_init.PLL.PLLP 		= 2;
									clk_init.ClockType 		= RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
									clk_init.SYSCLKSource 	= RCC_SYSCLKSOURCE_PLLCLK;
									clk_init.APB1CLKDivider = RCC_HCLK_DIV2;
									clk_init.APB2CLKDivider = RCC_HCLK_DIV2;
									clk_init.AHBCLKDivider 	= RCC_SYSCLK_DIV1;
									FlashLatency			= FLASH_ACR_LATENCY_1WS;
									break;
	case SYS_CLOCK_FREQ_84_MHz	:	osc_init.PLL.PLLM = 16;
									osc_init.PLL.PLLN = 168;
									osc_init.PLL.PLLP = 2;
									clk_init.ClockType 		= RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
									clk_init.SYSCLKSource 	= RCC_SYSCLKSOURCE_PLLCLK;
									clk_init.APB1CLKDivider = RCC_HCLK_DIV2;
									clk_init.APB2CLKDivider = RCC_HCLK_DIV2;
									clk_init.AHBCLKDivider 	= RCC_SYSCLK_DIV1;
									FlashLatency			= FLASH_ACR_LATENCY_2WS;
									break;
	case SYS_CLOCK_FREQ_120_MHz	:	osc_init.PLL.PLLM = 16;
									osc_init.PLL.PLLN = 240;
									osc_init.PLL.PLLP = 2;
									clk_init.ClockType 		= RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
									clk_init.SYSCLKSource 	= RCC_SYSCLKSOURCE_PLLCLK;
									clk_init.APB1CLKDivider = RCC_HCLK_DIV4;
									clk_init.APB2CLKDivider = RCC_HCLK_DIV2;
									clk_init.AHBCLKDivider 	= RCC_SYSCLK_DIV1;
									FlashLatency			= FLASH_ACR_LATENCY_3WS;
									break;
	default						:	return;
	}

	osc_init.PLL.PLLQ = 2;
	//osc_init.PLL.P = 2;

	if(HAL_RCC_OscConfig(&osc_init) != HAL_OK)
	{
		Error_Handler();
	}
	if(HAL_RCC_ClockConfig(&clk_init,FlashLatency)!= HAL_OK)
	{
		Error_Handler();
	}

}

void UART2_Init(void)
{

	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.Mode = UART_MODE_TX_RX;
	if(HAL_UART_Init(&huart2) != HAL_OK )
		{
			Error_Handler();
		}

}




void Error_Handler()
{

	//blink RED LED
}

