#include "stm32f4xx_hal.h"
#include "stm32f4xx.h"
#include "main.h"
#include <string.h>


void SystemClockConfig(void);
void Error_Handler(void);
void GPIO_Init(void);
void UART2_Init(void);


//TIM_HandleTypeDef htimer6;
UART_HandleTypeDef huart2;
extern char msg[30];

int main(void)
{
	HAL_Init();
	//SystemClockConfig();


	//Timer6_Init();
	GPIO_Init();
	UART2_Init();

	__HAL_RCC_BKPSRAM_CLK_ENABLE();


	__HAL_RCC_PWR_CLK_ENABLE();
	HAL_PWR_EnableBkUpAccess();

	uint8_t *pBKP_SRAM = (uint32_t*)(BKPSRAM_BASE);

	for(uint16_t i=0; i< strlen(msg); i++)
	{
		*(pBKP_SRAM+i) = msg[i];

	}


	while(1){
	}

	return 0;

}




void SystemClockConfig(void)
{


}

void Error_Handler(void)
{
	while(1);

}



void GPIO_Init(void)
{
	__HAL_RCC_GPIOD_CLK_ENABLE();
	__HAL_RCC_GPIOA_CLK_ENABLE();

	//Disable the clocks when in sleep mode
	__HAL_RCC_GPIOD_CLK_SLEEP_DISABLE();


	GPIO_InitTypeDef ledgpio,buttongpio;
	ledgpio.Pin = GPIO_PIN_12;
	ledgpio.Mode = GPIO_MODE_OUTPUT_PP;
	ledgpio.Pull = GPIO_NOPULL;
	HAL_GPIO_Init(GPIOD,&ledgpio);

	buttongpio.Pin = GPIO_PIN_0;
	buttongpio.Mode = GPIO_MODE_INPUT;
	ledgpio.Pull = GPIO_NOPULL;
	HAL_GPIO_Init(GPIOA,&buttongpio);


}

void UART2_Init(void)
{
	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.Mode = UART_MODE_TX_RX;
	if ( HAL_UART_Init(&huart2) != HAL_OK )
	{
		//There is a problem
		Error_Handler();
	}

}



