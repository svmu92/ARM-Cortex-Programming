		AREA	DATA

SIZE		EQU		8
GETPT		SPACE	4
PUTPT		SPACE	4
FIFO		SPACE	8

		EXPORT	PUTPT		[DATA, SIZE=4]
		EXPORT	GETPT		[DATA, SIZE=4]
		EXPORT	FIFOSIZE	[DATA, SIZE=4]

		EXPORT	FIFO_INIT
		EXPORT	FIFO_PUT
		EXPORT	FIFO_GET
		EXPORT	FIFO_SIZE
			
		AREA	fifo, CODE,READONLY
		
FIFO_INIT
		LDR		R0,=FIFO
		LDR		R1,=PUTPT ;PUTPOINTER
		STR		R0,[R1]
		
		LDR		R1,=GETPT ;GETPOINTER
		STR		R0,[R1]
		;INITIALLY, BOTH POINTERS MUST POINT TO THE START OF THE 8 BYTES SPACE
		
		BX		LR
		
FIFO_PUT
		LDR		R1,=PUTPT
		LDR		R2,[R1]
		ADD		R3,R2,#1
		LDR		R12,=FIFO+SIZE
		CMP		R3,R12
		BNE		NOWRAP
		LDR		R3,=FIFO
		
NOWRAP
		LDR		R12,=GETPT
		LDR		R12,[R12]
		CMP		R3,R12
		BNE		NOTFULL
		MOV		R0,#0 	;FIFO FULL
		BX		LR		;RETURN FROM SUBROUTINE
NOTFULL		
		STRB	R0,[R2]  ;r0=fifo 
		STR		R3,[R1]
		MOV		R0,#1
		BX		LR
		
		
FIFO_GET
PUSH	{R4,R5,LR}
		LDR		R1,=PUTPT
		LDR		R1,[R1]
		LDR		R2,=GETPT
		LDR		R3,[R2]
		CMP		R1,R3
		BNE		NOTEMPTY
		MOV		R0,#0
		B		DONE

NOTEMPTY
		LDR		R4,[R3]
		STRB	R4,[R0]
		LDR		R5,=FIFO+SIZE
		CMP		R3,R5
		BNE		NOWRAPGET
		LDR		R3,=FIFO
		
NOWRAP2	
		STR		R3,[R2];UPDATE GET POINTER


DONE		
POP		{R4,R5,PC}		
		
		
FIFO_SIZE
		LDR		R1,=PUTPT
		LDR		R1,[R1]
		LDR		R2,=GETPT
		LDR		R3,[R2]
		SUB		R0,R1,R3
		AND		R0,#(SIZE-1)
		
		BX		LR
		
		ALIGN
	END
	